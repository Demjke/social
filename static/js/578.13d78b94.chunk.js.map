{"version":3,"file":"static/js/578.13d78b94.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Main/Messages/Messages.module.css?ce34","components/Main/Messages/Dialog/Dialog.jsx","components/Main/Messages/Message/Message.jsx","components/Main/Messages/Messages.jsx","components/Main/Messages/MessagesContainer.jsx","components/common/FormsControls/FormsControls.jsx","hoc/WithAuthRedirect.jsx","utils/validators.js","webpack://social/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__FBM-C\",\"dialogs-wrapper\":\"Messages_dialogs-wrapper__twRiY\",\"title\":\"Messages_title__MQCJL\",\"dialogs-items\":\"Messages_dialogs-items__5dxJs\",\"dialog\":\"Messages_dialog__gLrq8\",\"active\":\"Messages_active__Axa4y\",\"dialogs-messages\":\"Messages_dialogs-messages__Ye1fe\",\"message\":\"Messages_message__UxUdB\",\"form\":\"Messages_form__d0gyh\",\"field\":\"Messages_field__9cXE4\",\"btn\":\"Messages_btn__oI+68\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"../Messages.module.css\";\r\n\r\n// Компонент Dialog\r\nconst Dialog = ({ id, name }) => (\r\n    <div className={classes.dialog}>\r\n        <NavLink to={`/messages/${id}`}>{name}</NavLink>\r\n    </div>\r\n);\r\nexport default Dialog;\r\n","import classes from \"../Messages.module.css\";\r\n\r\nconst Message = ({ message }) => <div className={classes.message}>{message}</div>;\r\n\r\nexport default Message;\r\n","import { reduxForm, reset as resetForm } from \"redux-form\";\r\nimport { maxLengthCreator, requared } from \"../../../utils/validators\";\r\nimport { createField, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport classes from \"./Messages.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Messages = ({ dialogsPage, sendMessage }) => {\r\n    let dialogs = dialogsPage.dialogs.map(item => <Dialog key={item.id} name={item.name} id={item.id} />);\r\n    let messages = dialogsPage.messages.map(item => <Message key={item.id} message={item.message} id={item.id} />);\r\n\r\n    let addNewMessage = (values, dispatch) => {\r\n        sendMessage(values.newMessageBody);\r\n        dispatch(resetForm(\"dialogAddMessageForm\"));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <h1 className={classes.title}>Messages</h1>\r\n            <div className={classes[\"dialogs-wrapper\"]}>\r\n                <div className={classes[\"dialogs-items\"]}>{dialogs}</div>\r\n                <div className={classes[\"dialogs-messages\"]}>\r\n                    {messages}\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AddMessageForm = ({ handleSubmit }) => {\r\n    return (\r\n        <form className={classes.form} action=\"/\" onSubmit={handleSubmit}>\r\n            {createField(\"Enter your text\", classes.field, \"newMessageBody\", [requared, maxLength50], Textarea)}\r\n            <button className={classes.btn} type=\"submit\">\r\n                Add message\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { WithAuthRedirect } from \"../../../hoc/WithAuthRedirect\";\r\nimport { addMessageCreator } from \"../../../store/dialogs-reducer\";\r\nimport Messages from \"./Messages\";\r\n\r\nlet mapStateToProps = ({ dialogsPage }) => ({ dialogsPage: dialogsPage });\r\n\r\nlet mapDispatchToProps = dispatch => ({ sendMessage: newMessageBody => dispatch(addMessageCreator(newMessageBody)) });\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Messages);\r\n","import { Field } from \"redux-form\";\r\nimport styles from \"./FormsControls.module.css\";\r\n\r\nexport const FormControl = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = props => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const Input = props => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport const createField = (placeholder, className, name, validators, component, props = {}) => (\r\n    <Field\r\n        className={className}\r\n        placeholder={placeholder}\r\n        component={component}\r\n        name={name}\r\n        validate={validators}\r\n        {...props}\r\n    />\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = state => ({ isAuth: state.auth.isAuth });\r\n\r\nexport const WithAuthRedirect = Component => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\r\n\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n","export const requared = value => {\r\n  if (value) return undefined;\r\n  return 'Field is requared';\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__SyJgq\",\"error\":\"FormsControls_error__7rN9x\",\"formSummaryError\":\"FormsControls_formSummaryError__+3Qr8\"};"],"names":["_ref","id","name","_jsx","className","classes","children","NavLink","to","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_ref2","handleSubmit","_jsxs","action","onSubmit","createField","requared","Textarea","type","dialogsPage","sendMessage","dialogs","map","item","Dialog","messages","Message","addNewMessage","values","dispatch","newMessageBody","resetForm","compose","connect","addMessageCreator","WithAuthRedirect","Messages","FormControl","meta","touched","error","hasError","styles","formControl","props","input","child","restProps","Input","placeholder","validators","component","arguments","length","undefined","Field","validate","mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","value","maxLength"],"sourceRoot":""}